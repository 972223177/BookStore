plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.protobuf'
    id 'kotlinx-serialization'
}

android {
    namespace 'com.ly.core_common'
    compileSdk Config.compileSdk

    defaultConfig {
        minSdk Config.minSdk
        targetSdk Config.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    sourceSets {
        main {
            proto {
                srcDir 'src/main/protobuf'
                include '**/*.proto'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        checkDependencies true
    }
}

protobuf {
    protoc {
        // You still need protoc like in the non-Android case
        artifact = 'com.google.protobuf:protoc:3.21.1'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                java {}
            }
        }
    }
}

dependencies {

    api(Config.deps.dataStore)
    api project(path: ':base_utils')
    api(Config.deps.protobufJavaUtil)
    kapt(Config.kapts.theRouter)
    api project(path: ':core-request')
    implementation(Config.deps.theRouter)
}